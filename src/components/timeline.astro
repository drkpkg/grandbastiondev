---
import { t } from "../i18n/translations.js";
import { getExperience } from "../data/experience.js";

// Get current locale from URL or default to 'en'
const url = new URL(Astro.request.url);
const locale = url.searchParams.get('lang') || 'en';
const experience = getExperience(locale);
---

<div id="timeline-modal" class="timeline-modal">
  <div class="timeline-modal-content">
    <div class="timeline-modal-header">
      <h2 data-i18n="experience.title">{t("experience.title")}</h2>
      <button class="timeline-close-btn" onclick="closeTimelineModal()">&times;</button>
    </div>
    <div class="timeline-container">
      {experience.map((job) => (
        <div class="timeline-item">
          <div class="timeline-marker"></div>
          <div class="timeline-content">
            <div class="timeline-header">
              <h3 class="timeline-title">{job.title}</h3>
              <div class="timeline-company">{job.company}</div>
              <div class="timeline-location">{job.location}</div>
              <div class="timeline-period">{job.period}</div>
            </div>
            <div class="timeline-description">
              <ul>
                {job.description.map((item) => (
                  <li>{item}</li>
                ))}
              </ul>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .timeline-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(3px);
  }

  .timeline-modal-content {
    background-color: #ffffff;
    margin: 0;
    padding: 0;
    border-radius: 0;
    width: 100%;
    height: 100vh;
    max-width: none;
    max-height: none;
    overflow-y: auto;
    box-shadow: none;
    animation: modalSlideIn 0.2s ease-out;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .timeline-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 24px 32px;
    border-bottom: 1px solid #e5e7eb;
    background: #ffffff;
    color: #1f2937;
    border-radius: 0;
    position: sticky;
    top: 0;
    z-index: 10;
  }

  .timeline-modal-header h2 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1f2937;
  }

  .timeline-close-btn {
    background: none;
    border: none;
    color: #6b7280;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 8px;
    width: 32px;
    height: 32px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }

  .timeline-close-btn:hover {
    background-color: #f3f4f6;
    color: #374151;
  }

  .timeline-container {
    padding: 32px;
    position: relative;
    max-width: 1000px;
    margin: 0 auto;
  }

  .timeline-container::before {
    content: '';
    position: absolute;
    left: 24px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: #e5e7eb;
    border-radius: 1px;
  }

  .timeline-item {
    position: relative;
    margin-bottom: 32px;
    padding-left: 48px;
  }

  .timeline-marker {
    position: absolute;
    left: 17px;
    top: 0;
    width: 14px;
    height: 14px;
    background: #667eea;
    border-radius: 50%;
    border: 3px solid #ffffff;
    box-shadow: 0 0 0 2px #e5e7eb;
    z-index: 2;
  }

  .timeline-content {
    background: #ffffff;
    padding: 24px;
    border-radius: 8px;
    border: 1px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .timeline-content:hover {
    border-color: #d1d5db;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  .timeline-header {
    margin-bottom: 16px;
  }

  .timeline-title {
    margin: 0 0 8px 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: #1f2937;
  }

  .timeline-company {
    font-size: 1rem;
    font-weight: 500;
    color: #667eea;
    margin-bottom: 4px;
  }

  .timeline-location {
    font-size: 0.875rem;
    color: #6b7280;
    margin-bottom: 4px;
  }

  .timeline-period {
    font-size: 0.875rem;
    font-weight: 500;
    color: #9ca3af;
    background: #f9fafb;
    padding: 4px 12px;
    border-radius: 16px;
    display: inline-block;
    border: 1px solid #e5e7eb;
  }

  .timeline-description ul {
    margin: 0;
    padding-left: 20px;
  }

  .timeline-description li {
    margin-bottom: 6px;
    line-height: 1.6;
    color: #4b5563;
    font-size: 0.875rem;
  }

  .timeline-description li:last-child {
    margin-bottom: 0;
  }

  /* Dark mode styles */
  html.dark-mode .timeline-modal-content {
    background-color: #111827;
    color: #f9fafb;
  }

  html.dark-mode .timeline-modal-header {
    background: #111827;
    border-bottom-color: #374151;
    color: #f9fafb;
  }

  html.dark-mode .timeline-modal-header h2 {
    color: #f9fafb;
  }

  html.dark-mode .timeline-close-btn {
    color: #9ca3af;
  }

  html.dark-mode .timeline-close-btn:hover {
    background-color: #374151;
    color: #d1d5db;
  }

  html.dark-mode .timeline-container::before {
    background: #374151;
  }

  html.dark-mode .timeline-marker {
    background: #667eea;
    border-color: #111827;
    box-shadow: 0 0 0 2px #374151;
  }

  html.dark-mode .timeline-content {
    background: #1f2937;
    border-color: #374151;
  }

  html.dark-mode .timeline-content:hover {
    border-color: #4b5563;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  html.dark-mode .timeline-title {
    color: #f9fafb;
  }

  html.dark-mode .timeline-company {
    color: #8b9dc3;
  }

  html.dark-mode .timeline-location {
    color: #9ca3af;
  }

  html.dark-mode .timeline-period {
    background: #374151;
    color: #d1d5db;
    border-color: #4b5563;
  }

  html.dark-mode .timeline-description li {
    color: #d1d5db;
  }

  /* Responsive design */
  @media screen and (max-width: 768px) {
    .timeline-modal-content {
      width: 100%;
      margin: 0;
    }

    .timeline-container {
      padding: 24px 16px;
    }

    .timeline-container::before {
      left: 16px;
    }

    .timeline-item {
      padding-left: 40px;
    }

    .timeline-marker {
      left: 9px;
    }

    .timeline-content {
      padding: 20px;
    }

    .timeline-title {
      font-size: 1.125rem;
    }

    .timeline-modal-header {
      padding: 20px 24px;
    }

    .timeline-modal-header h2 {
      font-size: 1.25rem;
    }
  }
</style>

<script>
  function openTimelineModal() {
    const modal = document.getElementById('timeline-modal');
    if (modal) {
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    }
  }

  function closeTimelineModal() {
    const modal = document.getElementById('timeline-modal');
    if (modal) {
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  }

  // Close modal when clicking outside
  window.onclick = function(event) {
    const modal = document.getElementById('timeline-modal');
    if (event.target === modal) {
      closeTimelineModal();
    }
  }

  // Close modal with Escape key
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
      closeTimelineModal();
    }
  });

  // Listen for locale changes and update experience data
  document.addEventListener('localeChanged', function(event) {
    const locale = event.detail.locale;
    updateExperienceData(locale);
  });

  async function updateExperienceData(locale) {
    const modal = document.getElementById('timeline-modal');
    if (modal && modal.style.display === 'block') {
      try {
        const response = await fetch(`/api/experience?lang=${locale}`);
        if (response.ok) {
          const experienceData = await response.json();
          updateTimelineContent(experienceData);
        }
      } catch (error) {
        console.error('Error updating experience data:', error);
      }
    }
  }

  function updateTimelineContent(experienceData) {
    const timelineContainer = document.querySelector('.timeline-container');
    if (!timelineContainer) return;
    
    timelineContainer.innerHTML = '';
    
    experienceData.forEach(job => {
      const timelineItem = document.createElement('div');
      timelineItem.className = 'timeline-item';
      
      timelineItem.innerHTML = `
        <div class="timeline-marker"></div>
        <div class="timeline-content">
          <div class="timeline-header">
            <h3 class="timeline-title">${job.title}</h3>
            <div class="timeline-company">${job.company}</div>
            <div class="timeline-location">${job.location}</div>
            <div class="timeline-period">${job.period}</div>
          </div>
          <div class="timeline-description">
            <ul>
              ${job.description.map(item => `<li>${item}</li>`).join('')}
            </ul>
          </div>
        </div>
      `;
      
      timelineContainer.appendChild(timelineItem);
    });
  }

  // Expose function globally
  window.openTimelineModal = openTimelineModal;
  window.closeTimelineModal = closeTimelineModal;
</script> 